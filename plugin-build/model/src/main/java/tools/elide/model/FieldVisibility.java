// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: elide/model/model.proto

package tools.elide.model;

/**
 * <pre>
 * Describes the visibility options for a given field.
 * </pre>
 *
 * Protobuf enum {@code model.FieldVisibility}
 */
public enum FieldVisibility
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <pre>
   * Default visibility level. No change to default behavior.
   * </pre>
   *
   * <code>DEFAULT_VISIBILITY = 0;</code>
   */
  DEFAULT_VISIBILITY(0),
  /**
   * <pre>
   * Denotes data that is fine to expose publicly.
   * </pre>
   *
   * <code>OPEN = 1;</code>
   */
  OPEN(1),
  /**
   * <pre>
   * Denotes data that should only be exposed to authorized users.
   * </pre>
   *
   * <code>AUTHORIZED = 2;</code>
   */
  AUTHORIZED(2),
  /**
   * <pre>
   * Denotes data that should only be exposed to users authorized by the owner.
   * </pre>
   *
   * <code>OWNER = 3;</code>
   */
  OWNER(3),
  /**
   * <pre>
   * Denotes data that should only be exposed internally.
   * </pre>
   *
   * <code>INTERNAL = 4;</code>
   */
  INTERNAL(4),
  UNRECOGNIZED(-1),
  ;

  /**
   * <pre>
   * Default visibility level. No change to default behavior.
   * </pre>
   *
   * <code>DEFAULT_VISIBILITY = 0;</code>
   */
  public static final int DEFAULT_VISIBILITY_VALUE = 0;
  /**
   * <pre>
   * Denotes data that is fine to expose publicly.
   * </pre>
   *
   * <code>OPEN = 1;</code>
   */
  public static final int OPEN_VALUE = 1;
  /**
   * <pre>
   * Denotes data that should only be exposed to authorized users.
   * </pre>
   *
   * <code>AUTHORIZED = 2;</code>
   */
  public static final int AUTHORIZED_VALUE = 2;
  /**
   * <pre>
   * Denotes data that should only be exposed to users authorized by the owner.
   * </pre>
   *
   * <code>OWNER = 3;</code>
   */
  public static final int OWNER_VALUE = 3;
  /**
   * <pre>
   * Denotes data that should only be exposed internally.
   * </pre>
   *
   * <code>INTERNAL = 4;</code>
   */
  public static final int INTERNAL_VALUE = 4;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static FieldVisibility valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static FieldVisibility forNumber(int value) {
    switch (value) {
      case 0: return DEFAULT_VISIBILITY;
      case 1: return OPEN;
      case 2: return AUTHORIZED;
      case 3: return OWNER;
      case 4: return INTERNAL;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<FieldVisibility>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      FieldVisibility> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<FieldVisibility>() {
          public FieldVisibility findValueByNumber(int number) {
            return FieldVisibility.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return tools.elide.model.Datamodel.getDescriptor().getEnumTypes().get(5);
  }

  private static final FieldVisibility[] VALUES = values();

  public static FieldVisibility valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private FieldVisibility(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:model.FieldVisibility)
}

