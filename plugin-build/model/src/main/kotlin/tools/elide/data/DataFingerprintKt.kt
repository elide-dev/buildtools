//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: elide/data/data.proto

package tools.elide.data;

@kotlin.jvm.JvmName("-initializedataFingerprint")
public inline fun dataFingerprint(block: tools.elide.data.DataFingerprintKt.Dsl.() -> kotlin.Unit): tools.elide.data.DataFingerprint =
  tools.elide.data.DataFingerprintKt.Dsl._create(tools.elide.data.DataFingerprint.newBuilder()).apply { block() }._build()
public object DataFingerprintKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: tools.elide.data.DataFingerprint.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: tools.elide.data.DataFingerprint.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): tools.elide.data.DataFingerprint = _builder.build()

    /**
     * <pre>
     * Algorithm in use when fingerprinting the associated data.
     * </pre>
     *
     * <code>.crypto.HashAlgorithm hash = 1;</code>
     */
    public var hash: tools.elide.crypto.HashAlgorithm
      @JvmName("getHash")
      get() = _builder.getHash()
      @JvmName("setHash")
      set(value) {
        _builder.setHash(value)
      }
    /**
     * <pre>
     * Algorithm in use when fingerprinting the associated data.
     * </pre>
     *
     * <code>.crypto.HashAlgorithm hash = 1;</code>
     */
    public fun clearHash() {
      _builder.clearHash()
    }

    /**
     * <pre>
     * Salt value used when fingerprinting the associated data, if applicable. Generally appended to the end of the data
     * to be fingerprinted.
     * </pre>
     *
     * <code>bytes salt = 2;</code>
     */
    public var salt: com.google.protobuf.ByteString
      @JvmName("getSalt")
      get() = _builder.getSalt()
      @JvmName("setSalt")
      set(value) {
        _builder.setSalt(value)
      }
    /**
     * <pre>
     * Salt value used when fingerprinting the associated data, if applicable. Generally appended to the end of the data
     * to be fingerprinted.
     * </pre>
     *
     * <code>bytes salt = 2;</code>
     */
    public fun clearSalt() {
      _builder.clearSalt()
    }

    /**
     * <pre>
     * Content of the fingerprint/checksum calculated as part of this data fingerprint.
     * </pre>
     *
     * <code>bytes fingerprint = 3;</code>
     */
    public var fingerprint: com.google.protobuf.ByteString
      @JvmName("getFingerprint")
      get() = _builder.getFingerprint()
      @JvmName("setFingerprint")
      set(value) {
        _builder.setFingerprint(value)
      }
    /**
     * <pre>
     * Content of the fingerprint/checksum calculated as part of this data fingerprint.
     * </pre>
     *
     * <code>bytes fingerprint = 3;</code>
     */
    public fun clearFingerprint() {
      _builder.clearFingerprint()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun tools.elide.data.DataFingerprint.copy(block: tools.elide.data.DataFingerprintKt.Dsl.() -> kotlin.Unit): tools.elide.data.DataFingerprint =
  tools.elide.data.DataFingerprintKt.Dsl._create(this.toBuilder()).apply { block() }._build()

